FUNCTION_BLOCK aceleracion

VAR_INPUT
    s0 : REAL;
    s1 : REAL;
    s2 : REAL;  
    s3 : REAL;
    s4 : REAL;
    s5 : REAL; 
    s6 : REAL;
    s7 : REAL;
    s8 : REAL;
    sig : REAL;
END_VAR

VAR_OUTPUT
    vel : REAL;
    rot : REAL;
END_VAR

FUZZIFY s0
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s1
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s2
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s3
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s4
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s5
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s6
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s7
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY s8
    TERM rozando    := (0,1) (0.1,1) (0.11,0);
    TERM muycerca   := (0,1) (0.3,0);
    TERM cerca   := (0,1) (0.3,0.5) (0.5,0.5) (0.7,0);
    TERM mid   := (0,0) (0.375,0) (0.75,1) (1.125,0);
    TERM lejos    := (0.6,0) (1.5,1);
    TERM muylejos    := (1,0) (1.5,1);
END_FUZZIFY

FUZZIFY sig
    TERM esquina    := (-135,0)(-90,1)(-45,0)(45,0)(90,1)(135,0);
    TERM der   := (-180,1) (0,0);
    TERM cen   := (-180,0) (-45,1) (45,1) (180,0);
    TERM izq    := (0,0) (180,1);
END_FUZZIFY




//EJEMPLO de definición NO VINCULANTE
DEFUZZIFY vel // entre 0 y 2.5 m/s
    TERM atras   := (-1,1) (-0.01,1) (0,0);
    TERM rapido   := (0,0) (2.5,1);
    TERM muyrapido   := (0,0) (2,0) (2.01,1) (2.5,1);
    TERM normal    := (0,0) (1.25,1) (2.5,0);
    TERM lento   := (0,0) (0.01,1) (1.5,0) (2.5,0);
    TERM muylento   := (0,0) (0.01,1) (1,0) (2.5,0);
    TERM casiparado   := (0,0) (0.01,1) (0.2,0) (2.5,0);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 1 (if no rule activates defuzzifier)
    DEFAULT := 1;
END_DEFUZZIFY

//EJEMPLO de definición NO VINCULANTE

DEFUZZIFY rot // entre -5 y 5 rad/s
    TERM esquinaizq :=  (0.8,0)(1.6,1)(2.4,0);
    TERM muyizq   :=    (-5,0) (0,0) (2.5,0.5) (3.5,1) (5,1);
    TERM izq   :=    (-5,0) (0,0) (1.5,1) (3.5,1) (5,0);
    TERM muypocoizq    :=    (-5,0)(-2.5,0) (-0.5,0) (0,1) (0.5,1)(1.5,0) (2.5,0) (5,0);
    TERM pocoizq    :=    (-5,0)(-2.5,0) (-0.5,0) (0,1) (1.5,1) (2.5,0.5) (5,0);
    TERM cen    :=    (-5,0) (-1.25,0) (-0.5,1) (0.5,1) (1.25,0);
    TERM muycen    :=    (-0.01,0) (0,1) (0.01,0);
    TERM muypocoder    :=    (-5,0) (-2.5,0) (-1.5,0)(-0.5,1) (0,1) (0.5,0);
    TERM pocoder    :=    (-5,0) (-2.5,0.5) (-1.5,1) (0,1) (0.5,0);
    TERM der   :=    (-5,0) (-3.5,1) (-1.5,1) (0,0);
    TERM muyder   :=    (-5,1) (-3.5,1) (-2.5,0.5) (0,0);
    TERM esquinader :=  (-2.4,0)(-1.6,1)(-0.8,0);

    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 1 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

//Reglas por defecto
//EJEMPLO de definición de reglas NO VINCULANTE
RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : PROD;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    //Definir las reglas del SE
    RULE 10: IF s0 IS muylejos AND s1 IS muylejos AND s2 IS muylejos AND s7 IS muylejos AND s8 IS muylejos THEN vel IS muyrapido;
    RULE 11: IF s0 IS NOT muylejos OR s1 IS NOT muylejos OR s2 IS NOT muylejos OR s7 IS NOT muylejos OR s8 IS NOT muylejos THEN vel IS lento;
    RULE 20: IF s0 IS cerca THEN vel IS atras;
    //RULE 21: IF s0 IS cerca THEN vel IS muylento;
    
    //RULE 22: IF s0 IS mid THEN vel IS lento;
    RULE 30: IF s1 IS muycerca THEN rot IS muyder;
    RULE 31: IF s2 IS muycerca THEN rot IS der;
    //RULE 32: IF s2 IS cerca THEN rot IS der;
    RULE 40: IF s8 IS muycerca THEN rot IS muyizq;
    RULE 41: IF s7 IS muycerca THEN rot IS izq;
    //RULE 42: IF s7 IS cerca THEN rot IS izq;


    RULE 50: IF sig IS cen THEN rot IS cen;
    RULE 60: IF sig IS der AND sig IS esquina THEN rot IS esquinader;
    RULE 61: IF sig IS der AND sig IS NOT esquina THEN rot IS der;
    RULE 64: IF sig IS izq AND sig IS NOT esquina THEN rot IS izq;
    RULE 63: IF sig IS izq AND sig IS esquina THEN rot IS esquinaizq;

    RULE 70: If s8 IS rozando AND s7 IS muycerca AND s0 IS muylejos AND s1 IS muylejos THEN vel IS atras,rot IS muyizq;
    RULE 71: If s1 IS rozando AND s2 IS muycerca AND s0 IS muylejos AND s8 IS muylejos THEN vel IS atras,rot IS muyder;

    RULE 110: IF s8 IS rozando THEN rot IS muyizq, vel IS atras;
    //RULE 111: IF s7 IS rozando THEN rot IS muyizq;
    RULE 120: IF s1 IS rozando THEN rot IS muyder, vel IS atras;
    //RULE 121: IF s2 IS rozando THEN rot IS muyder;
    //RULE 999: IF s0 IS cerca OR s0 IS NOT cerca THEN vel IS lento;

END_RULEBLOCK

END_FUNCTION_BLOCK
